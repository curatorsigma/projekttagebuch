/*! tailwindcss v4.0.3 | MIT License | https://tailwindcss.com */
.visible {
  visibility: visible;
}
.\!absolute {
  position: absolute !important;
}
.absolute {
  position: absolute;
}
.relative {
  position: relative;
}
.static {
  position: static;
}
.sticky {
  position: sticky;
}
.z-10 {
  z-index: 10;
}
.z-20 {
  z-index: 20;
}
.z-40 {
  z-index: 40;
}
.\!-m-px {
  margin: -1px !important;
}
.block {
  display: block;
}
.flex {
  display: flex;
}
.grid {
  display: grid;
}
.hidden {
  display: none;
}
.inline {
  display: inline;
}
.inline-block {
  display: inline-block;
}
.\!h-px {
  height: 1px !important;
}
.min-h-screen {
  min-height: 100vh;
}
.\!w-px {
  width: 1px !important;
}
.w-4\/5 {
  width: calc(4/5 * 100%);
}
.w-full {
  width: 100%;
}
.translate-y-1\/3 {
  --tw-translate-y: calc(1/3 * 100%);
  translate: var(--tw-translate-x) var(--tw-translate-y);
}
.appearance-none {
  appearance: none;
}
.grid-cols-1 {
  grid-template-columns: repeat(1, minmax(0, 1fr));
}
.grid-rows-3 {
  grid-template-rows: repeat(3, minmax(0, 1fr));
}
.flex-col {
  flex-direction: column;
}
.justify-between {
  justify-content: space-between;
}
.justify-center {
  justify-content: center;
}
.justify-evenly {
  justify-content: space-evenly;
}
.\!overflow-hidden {
  overflow: hidden !important;
}
.rounded-full {
  border-radius: calc(infinity * 1px);
}
.\!border-0 {
  border-style: var(--tw-border-style) !important;
  border-width: 0px !important;
}
.border-1 {
  border-style: var(--tw-border-style);
  border-width: 1px;
}
.border-2 {
  border-style: var(--tw-border-style);
  border-width: 2px;
}
.border-4 {
  border-style: var(--tw-border-style);
  border-width: 4px;
}
.border-t-0 {
  border-top-style: var(--tw-border-style);
  border-top-width: 0px;
}
.border-b-4 {
  border-bottom-style: var(--tw-border-style);
  border-bottom-width: 4px;
}
.border-solid {
  --tw-border-style: solid;
  border-style: solid;
}
.border-e-transparent {
  border-inline-end-color: transparent;
}
.align-\[-0\.125em\] {
  vertical-align: -0.125em;
}
.text-balance {
  text-wrap: balance;
}
.\!whitespace-nowrap {
  white-space: nowrap !important;
}
.ring {
  --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}
.filter {
  filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
}
.transition {
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}
.\!\[clip\:rect\(0\,0\,0\,0\)\] {
  clip: rect(0,0,0,0) !important;
}
.hover\:rounded-full {
  &:hover {
    @media (hover: hover) {
      border-radius: calc(infinity * 1px);
    }
  }
}
.hover\:border-2 {
  &:hover {
    @media (hover: hover) {
      border-style: var(--tw-border-style);
      border-width: 2px;
    }
  }
}
.focus\:rounded-full {
  &:focus {
    border-radius: calc(infinity * 1px);
  }
}
.motion-reduce\:animate-\[spin_1\.5s_linear_infinite\] {
  @media (prefers-reduced-motion: reduce) {
    animation: spin 1.5s linear infinite;
  }
}
.htmx-indicator {
  opacity: 0;
  transition: opacity 500ms ease-in;
}
.htmx-request .htmx-indicator {
  opacity: 1;
}
.htmx-request .htmx-indicator {
  opacity: 1;
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
